name: Dispatch Listener

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  RELEASE_BRANCHES: '["develop"]'
  PRERELEASE_BRANCHES: '["SUBZ-185-ci-gha", "main"]'

jobs:
  ShadowsocksVPN:
    runs-on: ubuntu-20.04
    steps:
      - name: Install shadowsocks-libev
        run: sudo apt-get update && sudo apt-get install -y shadowsocks-libev

      - name: Start shadowsocks-libev client
        run: |
          echo "{ \"server\": \"185.106.103.139\", \"server_port\": 24801, \"local_address\": \"127.0.0.1\", \"local_port\": 1080, \"password\":\"OothI4qBMPwXuYMzdysFGj\", \"timeout\":300, \"method\":\"chacha20-ietf-poly1305\" }" > shadowsocks.json
          sudo ss-local -c shadowsocks.json -f /var/run/shadowsocks-libev.pid

      - name: Setup iptables rules for redirecting traffic
        run: |
          sudo iptables -t nat -N SHADOWSOCKS
          sudo iptables -t nat -A SHADOWSOCKS -d 185.106.103.139 -j RETURN
          sudo iptables -t nat -A SHADOWSOCKS -d 0.0.0.0/8 -j RETURN
          sudo iptables -t nat -A SHADOWSOCKS -d 10.0.0.0/8 -j RETURN
          sudo iptables -t nat -A SHADOWSOCKS -d 127.0.0.0/8 -j RETURN
          sudo iptables -t nat -A SHADOWSOCKS -d 169.254.0.0/16 -j RETURN
          sudo iptables -t nat -A SHADOWSOCKS -d 172.16.0.0/12 -j RETURN
          sudo iptables -t nat -A SHADOWSOCKS -d 192.168.0.0/16 -j RETURN
          sudo iptables -t nat -A SHADOWSOCKS -p tcp -j REDIRECT --to-ports 1080
          sudo iptables -t nat -A PREROUTING -p tcp -j SHADOWSOCKS

      - name: rules
        run: sudo iptables -t nat -L -n -v

      - name: IpAfterVPN all trafic
        run: |
          curl --proxy socks5://127.0.0.1:1080 https://ifconfig.me

      - name: IpAfterVPN
        run: |
          curl ifconfig.me

      # - name: Install shadowsocks-libev
      #   run: |
      #     sudo apt update
      #     sudo apt install shadowsocks-libev
      # - name: Disable server side shadowsocks-libev
      #   run: |
      #     sudo systemctl stop shadowsocks-libev
      #     sudo systemctl disable shadowsocks-libev
      # - name: Config shadowsocks-libev
      #   run: |
      #     echo "{\"server\":\"185.106.103.139\",\"mode\":\"tcp_and_udp\",\"server_port\":24801,\"local_address\":\"127.0.0.1\",\"local_port\":1080,\"password\":\"OothI4qBMPwXuYMzdysFGj\",\"timeout\":60,\"method\":\"chacha20-ietf-poly1305\"}" | sudo tee /etc/shadowsocks-libev/client01.json
      #     cat /etc/shadowsocks-libev/client01.json
      # - name: Start shadowsocks-libev client
      #   run: |
      #     sudo systemctl start shadowsocks-libev-local@client01.service
      # - name: Check status shadowsocks-libev client
      #   run: |
      #     systemctl status shadowsocks-libev-local@client01.service
      # - name: IpAfterVPN all trafic
      #   run: |
      #     curl --proxy socks5://127.0.0.1:1080 https://ifconfig.me

      # - name: IpAfterVPN
      #   run: |
      #     curl ifconfig.me



  # Configs:
  #   runs-on: ubuntu-20.04
  #   outputs:
  #     isPublish: ${{ steps.isPublish.outputs.value }}
  #     isRelease: ${{ steps.isRelease.outputs.value }}
  #     isPrerelease: ${{ steps.isPrerelease.outputs.value }}
  #   steps:
  #     - name: Branch name
  #       id: branchName
  #       run: |
  #         value=$(basename ${GITHUB_REF})
  #         echo $value
  #         echo "value=$value" >> $GITHUB_OUTPUT
  #     - name: Is push
  #       id: isPush
  #       run: |
  #         value=${{ github.event_name == 'push'}}
  #         echo "value=$value" >> $GITHUB_OUTPUT
  #     - name: Is Release
  #       id: isRelease
  #       run: |
  #         value=${{ steps.isPush.outputs.value == 'true' && contains(fromJson(env.RELEASE_BRANCHES), steps.branchName.outputs.value) }}
  #         echo "value=$value" >> $GITHUB_OUTPUT
  #     - name: Is Prerelease
  #       id: isPrerelease
  #       run: |
  #         value=${{ steps.isPush.outputs.value == 'true' && contains(fromJson(env.PRERELEASE_BRANCHES), steps.branchName.outputs.value) }}
  #         echo "value=$value" >> $GITHUB_OUTPUT
  #     - name: Is publish
  #       id: isPublish
  #       run: |
  #         value=${{ steps.isRelease.outputs.value == 'true' || steps.isPrerelease.outputs.value == 'true' }}
  #         echo "value=$value" >> $GITHUB_OUTPUT

  # ReleaseJob:
  #   runs-on: ubuntu-20.04
  #   needs: Configs
  #   if: needs.Configs.outputs.isRelease == 'true'
  #   steps:
  #     - run: echo "isRelease:${{ needs.Configs.outputs.isRelease }}"

  # PrereleaseJob:
  #   runs-on: ubuntu-20.04
  #   needs: Configs
  #   if: needs.Configs.outputs.isPrerelease == 'true'
  #   steps:
  #     - run: echo "isPrerelease:${{ needs.Configs.outputs.isPrerelease }}"

  # createRelease:
  #   if: needs.Configs.outputs.isPublish == 'true'
  #   runs-on: ubuntu-latest
  #   needs: Configs
  #   permissions:
  #     contents: write
  #   steps:
  #     - id: set-release-branches
  #       run: echo 'releaseBranches=${{ env.RELEASE_BRANCHES }}' | tr -d '[]\" ' >> $GITHUB_OUTPUT

  #     - id: set-prerelease-branches
  #       run: echo 'prereleaseBranches=${{ env.PRERELEASE_BRANCHES }}' | tr -d '[]\" ' >> $GITHUB_OUTPUT

  #     - run: |
  #         echo "release_branches: ${{ steps.set-release-branches.outputs.releaseBranches }}"
  #         echo "pre_release_branches: ${{ steps.set-prerelease-branches.outputs.prereleaseBranches }}"
  #     - name: Bump version
  #       id: tag-version
  #       uses: mathieudutour/github-tag-action@v6.1
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         dry_run: true
  #         # release_branches: develop
  #         # pre_release_branches: SUBZ-185-ci-gha,main
  #         release_branches: ${{ steps.set-release-branches.outputs.releaseBranches }}
  #         pre_release_branches: ${{ steps.set-prerelease-branches.outputs.prereleaseBranches }}

  #     - name: echo new tag
  #       run: |
  #         echo "The next taag  version will be: ${{ steps.tag-version.outputs.new_tag }}"
  #     - name: echo tag
  #       run: |
  #         echo "The currenttag is: ${{ steps.tag-version.outputs.previous_tag }}"

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: ${{ steps.tag-version.outputs.new_tag}}
  #         target_commitish: ${{ github.sha }}
  #         files: artefacts.zip
  #         fail_on_unmatched_files: true
  #         prerelease: ${{ needs.Configs.outputs.isPrerelease == 'true' }}